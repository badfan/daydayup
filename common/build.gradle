apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion cfgs.compileSdkVersion


    defaultConfig {
        minSdkVersion cfgs.minSdkVersion
        targetSdkVersion cfgs.targetSdkVersion
        versionCode cfgs.versionCode
        versionName cfgs.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    /*打开databinding功能*/
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api "${cfgs.androidx_appcompat}"
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    api "androidx.recyclerview:recyclerview:${cfgs.version_recyclerview}"
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    api project(":commonconfig")
    api "${thirds.arouter_api}"
    annotationProcessor "${thirds.arouter_compiler}"
    api "${thirds.eventbus}"
//    api "android.arch.lifecycle:runtime:1.1.1"
//    api "android.arch.lifecycle:extensions:1.1.1"
//    // 如果你使用java8开发，可以添加这个依赖，里面只有一个类
//    api "android.arch.lifecycle:common-java8:1.1.1"
    api "${thirds.rxjava}"
    api "${thirds.rxandroid}"
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    api "${thirds.tencent_bugly}"
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    api "${thirds.tencent_tinker}"
    api "${thirds.tencent_bugly_nativecrashreport}"
    //状态栏
    implementation "${thirds.statusbar_immersionbar}"
}
